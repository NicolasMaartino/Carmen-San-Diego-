@startuml
title Jerarquias de Interfaces
abstract class GradoDePolicia{
    # tiempoDeViaje : int
    # tiempoDeDescanso : int
    # tiempoDeHeridaDeBala : int
    # dificultadMasFrecuente : Dificultad
    # dificultadMenosFrecuente : Dificultad
    # rarezaMasFrecuente : String
    # rarezaMenosFrecuente : String
    + calcularTiempoDeViaje(distancia, cronometro)
    + calcularTiempoDeBalazo(cronometro)
    + calcularTiempoDurmiendo(cronometro)
    + buscarPista(pistas[Pista], nombreLugar, dado) : Pista
    + elegirObjeto(objetosRobados[ObjetoRobado], random) : ObjetoRobado
}
class Novato{}
class Detective{}
class Investigador{}
class Sargento{}

interface ObjetoRobado{
    + rareza() : String
    + cantidadDePaises() : int
    + verificarLimitePaises(cantPaisesVisitados) : Ciudad
    + crearPoliciaConCiudadInicial(grado) : Policia
}

class ObjetoComun{}
class ObjetoValioso{}
class ObjetoMuyValioso{}


interface OrdenDeArresto{
    + emitida() : boolean
    + emitir(ladrones [Ladron]) : OrdenDeArresto
}

class OrdenEmitida{}
class OrdenSinEmitir{}

GradoDePolicia <|-- Novato
GradoDePolicia <|-- Detective
GradoDePolicia <|-- Investigador
GradoDePolicia <|-- Sargento

ObjetoRobado <|.. ObjetoComun
ObjetoRobado <|.. ObjetoValioso
ObjetoRobado <|.. ObjetoMuyValioso

OrdenDeArresto <|.. OrdenEmitida
OrdenDeArresto <|.. OrdenSinEmitir
@enduml